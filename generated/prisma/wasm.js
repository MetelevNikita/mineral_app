
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  total: 'total',
  status: 'status',
  createAt: 'createAt',
  updateAr: 'updateAr',
  isAdmin: 'isAdmin',
  firstVisit: 'firstVisit'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  avatar: 'avatar',
  age: 'age',
  profession: 'profession',
  bio: 'bio',
  phone: 'phone',
  telegram: 'telegram',
  userId: 'userId'
};

exports.Prisma.CollectionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image: 'image',
  received: 'received',
  createAt: 'createAt',
  updateAt: 'updateAt',
  userId: 'userId'
};

exports.Prisma.CollectionMineralScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image: 'image',
  received: 'received',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.MineralPassedScalarFieldEnum = {
  id: 'id',
  title: 'title',
  isPassed: 'isPassed',
  createAt: 'createAt',
  updateAt: 'updateAt',
  userId: 'userId'
};

exports.Prisma.MineralScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  video: 'video',
  image: 'image',
  isPassed: 'isPassed',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image: 'image',
  mineralId: 'mineralId',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.AnswerScalarFieldEnum = {
  id: 'id',
  text: 'text',
  correct: 'correct',
  questionId: 'questionId',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.StatusesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  icon: 'icon',
  price: 'price',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.MineralMapScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  image: 'image',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  Collection: 'Collection',
  CollectionMineral: 'CollectionMineral',
  MineralPassed: 'MineralPassed',
  Mineral: 'Mineral',
  Question: 'Question',
  Answer: 'Answer',
  Statuses: 'Statuses',
  MineralMap: 'MineralMap'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/nikitametelev/Documents/nextjs/myapp/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-arm64-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/nikitametelev/Documents/nextjs/myapp/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../generated/prisma\"\n  binaryTargets = [\"native\", \"linux-musl-arm64-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgres\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            Int             @id @default(autoincrement())\n  name          String\n  email         String          @unique\n  password      String\n  total         Int\n  mineralPassed MineralPassed[]\n  collection    Collection[]\n  status        String\n  createAt      DateTime        @default(now())\n  updateAr      DateTime        @default(now())\n  isAdmin       Boolean\n  firstVisit    Boolean         @default(false)\n\n  profile Profile?\n}\n\nmodel Profile {\n  id         Int     @id @default(autoincrement())\n  avatar     String\n  age        String\n  profession String\n  bio        String?\n  phone      String?\n  telegram   String?\n  userId     Int     @unique\n  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Collection {\n  id       Int     @id @default(autoincrement())\n  title    String\n  image    String\n  received Boolean @default(false)\n\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel CollectionMineral {\n  id       Int     @id @default(autoincrement())\n  title    String\n  image    String\n  received Boolean @default(false)\n\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n}\n\nmodel MineralPassed {\n  id       Int      @id @default(autoincrement())\n  title    String\n  isPassed Boolean\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, id])\n}\n\n// minerale\n\nmodel Mineral {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String\n  video       String\n  image       String\n  isPassed    Boolean  @default(false)\n  createAt    DateTime @default(now())\n  updateAt    DateTime @default(now())\n\n  question Question[]\n}\n\nmodel Question {\n  id        Int     @id @default(autoincrement())\n  title     String\n  image     String?\n  mineral   Mineral @relation(fields: [mineralId], references: [id], onDelete: Cascade)\n  mineralId Int\n\n  answers Answer[]\n\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n}\n\nmodel Answer {\n  id      Int     @id @default(autoincrement())\n  text    String\n  correct Boolean\n\n  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)\n  questionId Int\n\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n}\n\nmodel Statuses {\n  id    Int     @id @default(autoincrement())\n  title String\n  icon  String\n  price String?\n\n  createAt DateTime @default(now())\n  updateAt DateTime @default(now())\n}\n\nmodel MineralMap {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String\n  image       String?\n  createAt    DateTime @default(now())\n  updateAt    DateTime @default(now())\n}\n",
  "inlineSchemaHash": "1e93f239bc3e9a0764c11c24721a1073f67531f71f0de05757d20f4f19adc9f7",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mineralPassed\",\"kind\":\"object\",\"type\":\"MineralPassed\",\"relationName\":\"MineralPassedToUser\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToUser\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAr\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"firstVisit\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profession\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telegram\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"}],\"dbName\":null},\"Collection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"received\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CollectionToUser\"}],\"dbName\":null},\"CollectionMineral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"received\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MineralPassed\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MineralPassedToUser\"}],\"dbName\":null},\"Mineral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"video\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"MineralToQuestion\"}],\"dbName\":null},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mineral\",\"kind\":\"object\",\"type\":\"Mineral\",\"relationName\":\"MineralToQuestion\"},{\"name\":\"mineralId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"Answer\",\"relationName\":\"AnswerToQuestion\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Answer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"correct\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"AnswerToQuestion\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Statuses\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MineralMap\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

